<?xml version="1.0" encoding="utf-8"?>
<Project
  DefaultTargets="Build" >
  <Target
    Name="CoreCompile"
    Inputs="$(MSBuildAllProjects);
                @(CompileBefore);
                @(Compile);
                @(CompileAfter);
                @(FscCompilerTools);
                @(_CoreCompileResourceInputs);
                @(ManifestNonResxWithNoCultureOnDisk);
                $(ApplicationIcon);
                $(AssemblyOriginatorKeyFile);
                @(ReferencePath);
                @(CompiledLicenseFile);
                @(EmbeddedDocumentation); 
                $(Win32Resource);
                $(Win32Manifest);
                @(CustomAdditionalCompileInputs);
                $(VersionFile);
                $(KeyOriginatorFile);
                $(UseSource);
                $(LoadSource)"
    Outputs="@(DocFileItem);
                 @(IntermediateAssembly);
                 @(IntermediateRefAssembly);
                 @(_DebugSymbolsIntermediatePath);
                 $(NonExistentFile);
                 @(CustomAdditionalCompileOutputs)"
    Returns="@(FscCommandLineArgs)"
    DependsOnTargets="$(CoreCompileDependsOn)" >
    <Error
      Condition="'$(SilverlightVersion)' != '' and '$(SilverlightVersion)' != 'v5.0'"
      Text="In this version of Visual Studio, F# for Silverlight can only target Silverlight v5.0. Use a prior version of Visual Studio to target previous versions of Silverlight with F#." />
    <Warning
      Condition="'$(Win32ResourceFile)' != '' "
      Text="The property &lt;Win32ResourceFile&gt; has been renamed to &lt;Win32Resource&gt;. Update your project file to ensure that the correct value is passed via the --win32res option to the F# compiler." />
    <!-- Workaround for differences between how msbuild and xbuild handle embedded resources.
             If we just naively include the additional items needed for mono, that leads to issues
             on msbuild/Windows due to double-including resources.
             Here, we use the $(UsingXBuild) property to conditionally set another property containing the
             correct list of resources based on the build system being used.
             This could be a bit simpler, but xbuild doesn't seem to support msbuild 4.0 'item functions'
             like Distinct().
             Reference: https://github.com/dotnet/fsharp/pull/2595
                        https://github.com/dotnet/fsharp/pull/2605
        -->
    <ItemGroup>
      <ActualEmbeddedResources
        Condition=" '$(UsingXBuild)' == true"
        Include="@(_CoreCompileResourceInputs);@(ManifestResourceWithNoCulture);@(ManifestNonResxWithNoCultureOnDisk);@(CompiledLicenseFile);@(AdditionalEmbeddedResource)" />
      <ActualEmbeddedResources
        Condition=" '$(UsingXBuild)' != true"
        Include="@(_CoreCompileResourceInputs);@(CompiledLicenseFile);@(AdditionalEmbeddedResource)" />
    </ItemGroup>
    <ItemGroup>
      <EmbeddedFiles
        Include="@(Embed)"
        KeepDuplicates="false" />
      <EmbeddedFiles
        Include="@(FsGeneratedSource)"
        KeepDuplicates="false"
        Condition="'$(SourceLink)'!='' or '$(EmbeddedFiles)'!='' or '$(EmbedAllSources)'!=''" />
    </ItemGroup>
    <!-- Dotnet SDK requires SimpleResolution to be true Legacy project system build not -->
    <PropertyGroup>
      <FscOtherFlags
        Condition="'$(SimpleResolution)' == 'true'">--simpleresolution $(OtherFlags)</FscOtherFlags>
      <FscOtherFlags
        Condition="'$(SimpleResolution)' != 'true'">$(OtherFlags)</FscOtherFlags>
    </PropertyGroup>
    <!-- Condition is to filter out the _CoreCompileResourceInputs so that it doesn't pass in culture resources to the compiler -->
    <!-- NOTE: ManifestResourceWithNoCulture and ManifestNonResxWithNoCultureOnDisk are generated by Mono targets files -->
    <!--START OF CACHING EXTENSION CODE-->
    <ItemGroup>
      <CompilerCacheAllCompilerProperties
        Include="___nonexistent___"
        BaseAddress="$(BaseAddress)"
        ChecksumAlgorithm="$(PdbChecksumAlgorithm)"
        CodePage="$(CodePage)"
        CompilerTools="@(FscCompilerTools)"
        DebugSymbols="$(DebugSymbols)"
        DebugType="$(DebugType)"
        DefineConstants="$(DefineConstants)"
        DelaySign="$(DelaySign)"
        Deterministic="$(Deterministic)"
        DisabledWarnings="$(NoWarn)"
        DocumentationFile="$(DocumentationFile)"
        DotnetFscCompilerPath="$(DotnetFscCompilerPath)"
        EmbedAllSources="$(EmbedAllSources)"
        Embed="@(EmbeddedFiles)"
        GenerateInterfaceFile="$(GenerateInterfaceFile)"
        HighEntropyVA="$(HighEntropyVA)"
        KeyFile="$(KeyOriginatorFile)"
        LangVersion="$(LangVersion)"
        LCID="$(LCID)"
        NoFramework="true"
        Optimize="$(Optimize)"
        OtherFlags="$(FscOtherFlags)"
        OutputAssembly="@(IntermediateAssembly)"
        OutputRefAssembly="@(IntermediateRefAssembly)"
        PathMap="$(PathMap)"
        PdbFile="$(PdbFile)"
        Platform="$(PlatformTarget)"
        Prefer32Bit="$(Actual32Bit)"
        PreferredUILang="$(PreferredUILang)"
        ProvideCommandLineArgs="$(ProvideCommandLineArgs)"
        PublicSign="$(PublicSign)"
        References="@(ReferencePath)"
        ReferencePath="$(ReferencePath)"
        RefOnly="$(ProduceOnlyReferenceAssembly)"
        Resources="@(ActualEmbeddedResources)"
        SkipCompilerExecution="$(SkipCompilerExecution)"
        SourceLink="$(SourceLink)"
        Sources="@(CompileBefore);@(Compile);@(CompileAfter)"
        SubsystemVersion="$(SubsystemVersion)"
        Tailcalls="$(Tailcalls)"
        TargetType="$(OutputType)"
        TargetProfile="$(TargetProfile)"
        ToolExe="$(FscToolExe)"
        ToolPath="$(FscToolPath)"
        TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
        UseStandardResourceNames="$(UseStandardResourceNames)"
        Utf8Output="$(Utf8Output)"
        VersionFile="$(VersionFile)"
        VisualStudioStyleErrors="$(VisualStudioStyleErrors)"
        WarningLevel="$(WarningLevel)"
        WarningsAsErrors="$(WarningsAsErrors)"
        WarningsNotAsErrors="$(WarningsNotAsErrors)"
        WarnOn="$(WarnOn)"
        Win32IconFile="$(ApplicationIcon)"
        Win32ManifestFile="$(Win32Manifest)"
        Win32ResourceFile="$(Win32Resource)" />
    </ItemGroup>
    <PropertyGroup>
      <CanCache
        Condition="'$(EmitCompilerGeneratedFiles)' == 'true'">false</CanCache>
      <CompilerCacheCompilationWouldRun
        Condition="'%(_CoreCompileResourceInputs.WithCulture)' != 'true'">true</CompilerCacheCompilationWouldRun>
    </PropertyGroup>
    <CompilerCacheLocate
      Condition="'$(CanCache)' == 'true' AND '$(CompilerCacheCompilationWouldRun)' == 'true'"
      ConfigPath="$(CompilerCacheConfigPath)"
      AllCompilerProperties="@(CompilerCacheAllCompilerProperties)"
      ProjectFullPath="$(MSBuildProjectFullPath)"
      AssemblyName="$(AssemblyName)">
      <Output
        TaskParameter="RunCompilation"
        PropertyName="CompilerCacheRunCompilation" />
      <Output
        TaskParameter="PopulateCache"
        PropertyName="CompilerCachePopulateCache" />
      <Output
        TaskParameter="Guid"
        PropertyName="CompilerCacheGuid" />
    </CompilerCacheLocate>
    <PropertyGroup>
      <CompilerCacheRunCompilation
        Condition="'$(CanCache)' != 'true'">true</CompilerCacheRunCompilation>
    </PropertyGroup>
    <!--END OF CACHING EXTENSION CODE-->
    <Fsc
      Condition="'$(CompilerCacheRunCompilation)' == 'true' AND '%(_CoreCompileResourceInputs.WithCulture)' != 'true'"
      BaseAddress="$(BaseAddress)"
      ChecksumAlgorithm="$(PdbChecksumAlgorithm)"
      CodePage="$(CodePage)"
      CompilerTools="@(FscCompilerTools)"
      DebugSymbols="$(DebugSymbols)"
      DebugType="$(DebugType)"
      DefineConstants="$(DefineConstants)"
      DelaySign="$(DelaySign)"
      Deterministic="$(Deterministic)"
      DisabledWarnings="$(NoWarn)"
      DocumentationFile="$(DocumentationFile)"
      DotnetFscCompilerPath="$(DotnetFscCompilerPath)"
      EmbedAllSources="$(EmbedAllSources)"
      Embed="@(EmbeddedFiles)"
      GenerateInterfaceFile="$(GenerateInterfaceFile)"
      HighEntropyVA="$(HighEntropyVA)"
      KeyFile="$(KeyOriginatorFile)"
      LangVersion="$(LangVersion)"
      LCID="$(LCID)"
      NoFramework="true"
      Optimize="$(Optimize)"
      OtherFlags="$(FscOtherFlags)"
      OutputAssembly="@(IntermediateAssembly)"
      OutputRefAssembly="@(IntermediateRefAssembly)"
      PathMap="$(MSBuildProjectDirectory)=/__nonexistent__directory__"
      PdbFile="$(PdbFile)"
      Platform="$(PlatformTarget)"
      Prefer32Bit="$(Actual32Bit)"
      PreferredUILang="$(PreferredUILang)"
      ProvideCommandLineArgs="$(ProvideCommandLineArgs)"
      PublicSign="$(PublicSign)"
      References="@(ReferencePath)"
      ReferencePath="$(ReferencePath)"
      RefOnly="$(ProduceOnlyReferenceAssembly)"
      Resources="@(ActualEmbeddedResources)"
      SkipCompilerExecution="$(SkipCompilerExecution)"
      SourceLink="$(SourceLink)"
      Sources="@(CompileBefore);@(Compile);@(CompileAfter)"
      SubsystemVersion="$(SubsystemVersion)"
      Tailcalls="$(Tailcalls)"
      TargetType="$(OutputType)"
      TargetProfile="$(TargetProfile)"
      ToolExe="$(FscToolExe)"
      ToolPath="$(FscToolPath)"
      TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
      UseStandardResourceNames="$(UseStandardResourceNames)"
      Utf8Output="$(Utf8Output)"
      VersionFile="$(VersionFile)"
      VisualStudioStyleErrors="$(VisualStudioStyleErrors)"
      WarningLevel="$(WarningLevel)"
      WarningsAsErrors="$(WarningsAsErrors)"
      WarningsNotAsErrors="$(WarningsNotAsErrors)"
      WarnOn="$(WarnOn)"
      Win32IconFile="$(ApplicationIcon)"
      Win32ManifestFile="$(Win32Manifest)"
      Win32ResourceFile="$(Win32Resource)">
      <Output
        TaskParameter="CommandLineArgs"
        ItemName="FscCommandLineArgs" />
    </Fsc>
    <!--START OF CACHING EXTENSION CODE-->
    <CompilerCachePopulateCache
      Condition="'$(CompilerCachePopulateCache)' == 'true'"
      Guid="$(CompilerCacheGuid)"
      CompilationSucceeded="$(MSBuildLastTaskResult)" />
    <!--END OF CACHING EXTENSION CODE-->
    <ItemGroup>
      <_CoreCompileResourceInputs
        Remove="@(_CoreCompileResourceInputs)" />
    </ItemGroup>
    <CallTarget
      Targets="$(TargetsTriggeredByCompilation)"
      Condition="'$(TargetsTriggeredByCompilation)' != ''" />
  </Target>
</Project>