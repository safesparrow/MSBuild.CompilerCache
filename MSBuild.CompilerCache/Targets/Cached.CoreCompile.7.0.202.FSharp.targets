<?xml version="1.0" encoding="utf-8"?>
<Project
  DefaultTargets="Build" >
  <Target
    Name="CoreCompile"
    Inputs="$(MSBuildAllProjects);
                @(CompileBefore);
                @(Compile);
                @(CompileAfter);
                @(FscCompilerTools);
                @(_CoreCompileResourceInputs);
                @(ManifestNonResxWithNoCultureOnDisk);
                $(ApplicationIcon);
                $(AssemblyOriginatorKeyFile);
                @(ReferencePathWithRefAssemblies);
                @(CompiledLicenseFile);
                @(EmbeddedDocumentation); 
                $(Win32Resource);
                $(Win32Manifest);
                @(CustomAdditionalCompileInputs);
                $(VersionFile);
                $(KeyOriginatorFile);
                $(UseSource);
                $(LoadSource)"
    Outputs="@(DocFileItem);
                 @(IntermediateAssembly);
                 @(IntermediateRefAssembly);
                 @(_DebugSymbolsIntermediatePath);
                 $(NonExistentFile);
                 @(CustomAdditionalCompileOutputs)"
    Returns="@(FscCommandLineArgs)"
    DependsOnTargets="$(CoreCompileDependsOn)" >
    <Error
      Condition="'$(SilverlightVersion)' != '' and '$(SilverlightVersion)' != 'v5.0'"
      Text="In this version of Visual Studio, F# for Silverlight can only target Silverlight v5.0. Use a prior version of Visual Studio to target previous versions of Silverlight with F#." />
    <Warning
      Condition="'$(Win32ResourceFile)' != '' "
      Text="The property &lt;Win32ResourceFile&gt; has been renamed to &lt;Win32Resource&gt;. Update your project file to ensure that the correct value is passed via the --win32res option to the F# compiler." />
    <!-- Workaround for differences between how msbuild and xbuild handle embedded resources.
             If we just naively include the additional items needed for mono, that leads to issues
             on msbuild/Windows due to double-including resources.
             Here, we use the $(UsingXBuild) property to conditionally set another property containing the
             correct list of resources based on the build system being used.
             This could be a bit simpler, but xbuild doesn't seem to support msbuild 4.0 'item functions'
             like Distinct().
             Reference: https://github.com/dotnet/fsharp/pull/2595
                        https://github.com/dotnet/fsharp/pull/2605
        -->
    <ItemGroup>
      <ActualEmbeddedResources
        Condition=" '$(UsingXBuild)' == true"
        Include="@(_CoreCompileResourceInputs);@(ManifestResourceWithNoCulture);@(ManifestNonResxWithNoCultureOnDisk);@(CompiledLicenseFile);@(AdditionalEmbeddedResource)" />
      <ActualEmbeddedResources
        Condition=" '$(UsingXBuild)' != true"
        Include="@(_CoreCompileResourceInputs);@(CompiledLicenseFile);@(AdditionalEmbeddedResource)" />
    </ItemGroup>
    <ItemGroup>
      <EmbeddedFiles
        Include="@(Embed)"
        KeepDuplicates="false" />
      <EmbeddedFiles
        Include="@(FsGeneratedSource)"
        KeepDuplicates="false"
        Condition="'$(SourceLink)'!='' or '$(EmbeddedFiles)'!='' or '$(EmbedAllSources)'!=''" />
    </ItemGroup>
    <!-- Dotnet SDK requires SimpleResolution to be true Legacy project system build not -->
    <PropertyGroup>
      <FscOtherFlags
        Condition="'$(SimpleResolution)' == 'true'">--simpleresolution $(OtherFlags)</FscOtherFlags>
      <FscOtherFlags
        Condition="'$(SimpleResolution)' != 'true'">$(OtherFlags)</FscOtherFlags>
    </PropertyGroup>
    <!-- Condition is to filter out the _CoreCompileResourceInputs so that it doesn't pass in culture resources to the compiler -->
    <!-- NOTE: ManifestResourceWithNoCulture and ManifestNonResxWithNoCultureOnDisk are generated by Mono targets files -->
    <!--START OF CACHING EXTENSION CODE-->
    <PropertyGroup>
      <CanCache
        Condition="('$(OutputType)' == 'Library' OR '$(OutputType)' == 'Exe')
AND
'$(AdditionalLibPaths)' == ''
AND
'@(AddModules)' == ''
AND
'$(EmitCompilerGeneratedFiles)' != 'true'
AND
'$(ProvideCommandLineArgs)' != 'true'
AND
'$(ReportAnalyzer)' != 'true'
AND
'$(SkipCompilerExecution)' != 'true'
AND
'$(SourceLink)' == ''
AND
'$(PublicSign)' != 'true'
AND
'$(DelaySign)' == ''
AND
'$(DotnetFscCompilerPath)' == ''
AND
'$(GenerateInterfaceFile)' == ''
AND
'$(PathMap)' == ''
AND
'$(ReferencePathWithRefAssemblies)' == ''
AND
'$(FscToolExe)' == ''
AND
'$(FscToolPath)' == ''
AND
'$(VersionFile)' == ''">true</CanCache>
    </PropertyGroup>
    <PropertyGroup
      Condition="'$(CanCache)' == 'true'">
      <PropertyInputs>BaseAddress=$(BaseAddress);ChecksumAlgorithm=$(PdbChecksumAlgorithm);CodePage=$(CodePage);CompilerTools=@(FscCompilerTools);CompressMetadata=$(CompressMetadata);DebugSymbols=$(DebugSymbols);DebugType=$(DebugType);DefineConstants=$(DefineConstants);Deterministic=$(Deterministic);DisabledWarnings=$(NoWarn);DocumentationFile=$(DocumentationFile);EmbedAllSources=$(EmbedAllSources);HighEntropyVA=$(HighEntropyVA);LangVersion=$(LangVersion);LCID=$(LCID);NoFramework=true;NoInterfaceData=$(NoInterfaceData);NoOptimizationData=$(NoOptimizationData);Optimize=$(Optimize);ReflectionFree=$(ReflectionFree);OtherFlags=$(FscOtherFlags);OutputAssembly=@(IntermediateAssembly);OutputRefAssembly=@(IntermediateRefAssembly);PdbFile=$(PdbFile);Platform=$(PlatformTarget);Prefer32Bit=$(Actual32Bit);PreferredUILang=$(PreferredUILang);ProvideCommandLineArgs=$(ProvideCommandLineArgs);PublicSign=$(PublicSign);RefOnly=$(ProduceOnlyReferenceAssembly);SkipCompilerExecution=$(SkipCompilerExecution);SourceLink=$(SourceLink);SubsystemVersion=$(SubsystemVersion);Tailcalls=$(Tailcalls);TargetType=$(OutputType);TargetProfile=$(TargetProfile);TreatWarningsAsErrors=$(TreatWarningsAsErrors);UseStandardResourceNames=$(UseStandardResourceNames);Utf8Output=$(Utf8Output);VisualStudioStyleErrors=$(VisualStudioStyleErrors);WarningLevel=$(WarningLevel);WarningsAsErrors=$(WarningsAsErrors);WarningsNotAsErrors=$(WarningsNotAsErrors);WarnOn=$(WarnOn)</PropertyInputs>
    </PropertyGroup>
    <ItemGroup
      Condition="'$(CanCache)' == 'true'">
      <FileInputs
        Include="@(EmbeddedFiles)" />
      <FileInputs
        Include="$(KeyOriginatorFile)" />
      <FileInputs
        Include="@(ActualEmbeddedResources)" />
      <FileInputs
        Include="@(CompileBefore);@(Compile);@(CompileAfter)" />
      <FileInputs
        Include="$(ApplicationIcon)" />
      <FileInputs
        Include="$(Win32Manifest)" />
      <FileInputs
        Include="$(Win32Resource)" />
    </ItemGroup>
    <ItemGroup
      Condition="'$(CanCache)' == 'true'">
      <CompileOutputsToCache
        Include="$(DocumentationFile)"
        Name="DocumentationFile" />
      <CompileOutputsToCache
        Include="@(IntermediateAssembly)"
        Name="OutputAssembly" />
      <CompileOutputsToCache
        Include="@(IntermediateRefAssembly)"
        Name="OutputRefAssembly" />
      <CompileOutputsToCache
        Include="$(PdbFile)"
        Name="PdbFile" />
    </ItemGroup>
    <LocateCompilationCacheEntry
      Condition="'$(CanCache)' == 'true'"
      ProjectFullPath="$(MSBuildProjectFullPath)"
      FileInputs="@(FileInputs)"
      PropertyInputs="@(PropertyInputs)"
      References="@(ReferencePathWithRefAssemblies)"
      OutputsToCache="@(CompileOutputsToCache)"
      BaseCacheDir="$(CompilationCacheBaseDir)">
      <Output
        TaskParameter="CacheHit"
        PropertyName="CacheHit" />
      <Output
        TaskParameter="CacheKey"
        PropertyName="CacheKey" />
      <Output
        TaskParameter="LocalInputsHash"
        PropertyName="LocalInputsHash" />
    </LocateCompilationCacheEntry>
    <PropertyGroup>
      <DoInvokeCompilation
        Condition="'$(CacheHit)' != 'true' OR '$(CompileAndCheckAgainstCache)' == 'true'">true</DoInvokeCompilation>
    </PropertyGroup>
    <!--END OF CACHING EXTENSION CODE-->
    <!--END OF CACHING EXTENSION CODE-->
    <Fsc
      Condition="'$(DoInvokeCompilation)' == 'true' AND '%(_CoreCompileResourceInputs.WithCulture)' != 'true'"
      BaseAddress="$(BaseAddress)"
      ChecksumAlgorithm="$(PdbChecksumAlgorithm)"
      CodePage="$(CodePage)"
      CompilerTools="@(FscCompilerTools)"
      CompressMetadata="$(CompressMetadata)"
      DebugSymbols="$(DebugSymbols)"
      DebugType="$(DebugType)"
      DefineConstants="$(DefineConstants)"
      DelaySign="$(DelaySign)"
      Deterministic="$(Deterministic)"
      DisabledWarnings="$(NoWarn)"
      DocumentationFile="$(DocumentationFile)"
      DotnetFscCompilerPath="$(DotnetFscCompilerPath)"
      EmbedAllSources="$(EmbedAllSources)"
      Embed="@(EmbeddedFiles)"
      GenerateInterfaceFile="$(GenerateInterfaceFile)"
      HighEntropyVA="$(HighEntropyVA)"
      KeyFile="$(KeyOriginatorFile)"
      LangVersion="$(LangVersion)"
      LCID="$(LCID)"
      NoFramework="true"
      NoInterfaceData="$(NoInterfaceData)"
      NoOptimizationData="$(NoOptimizationData)"
      Optimize="$(Optimize)"
      ReflectionFree="$(ReflectionFree)"
      OtherFlags="$(FscOtherFlags)"
      OutputAssembly="@(IntermediateAssembly)"
      OutputRefAssembly="@(IntermediateRefAssembly)"
      PathMap="$(MSBuildProjectDirectory)=/__nonexistent__directory__"
      PdbFile="$(PdbFile)"
      Platform="$(PlatformTarget)"
      Prefer32Bit="$(Actual32Bit)"
      PreferredUILang="$(PreferredUILang)"
      ProvideCommandLineArgs="$(ProvideCommandLineArgs)"
      PublicSign="$(PublicSign)"
      References="@(ReferencePathWithRefAssemblies)"
      ReferencePath="$(ReferencePathWithRefAssemblies)"
      RefOnly="$(ProduceOnlyReferenceAssembly)"
      Resources="@(ActualEmbeddedResources)"
      SkipCompilerExecution="$(SkipCompilerExecution)"
      SourceLink="$(SourceLink)"
      Sources="@(CompileBefore);@(Compile);@(CompileAfter)"
      SubsystemVersion="$(SubsystemVersion)"
      Tailcalls="$(Tailcalls)"
      TargetType="$(OutputType)"
      TargetProfile="$(TargetProfile)"
      ToolExe="$(FscToolExe)"
      ToolPath="$(FscToolPath)"
      TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
      UseStandardResourceNames="$(UseStandardResourceNames)"
      Utf8Output="$(Utf8Output)"
      VersionFile="$(VersionFile)"
      VisualStudioStyleErrors="$(VisualStudioStyleErrors)"
      WarningLevel="$(WarningLevel)"
      WarningsAsErrors="$(WarningsAsErrors)"
      WarningsNotAsErrors="$(WarningsNotAsErrors)"
      WarnOn="$(WarnOn)"
      Win32IconFile="$(ApplicationIcon)"
      Win32ManifestFile="$(Win32Manifest)"
      Win32ResourceFile="$(Win32Resource)">
      <Output
        TaskParameter="CommandLineArgs"
        ItemName="FscCommandLineArgs" />
    </Fsc>
    <!--START OF CACHING EXTENSION CODE-->
    <UseOrPopulateCache
      Condition="'$(CanCache)' == 'true'"
      ProjectFullPath="$(MSBuildProjectFullPath)"
      FileInputs="@(FileInputs)"
      PropertyInputs="@(PropertyInputs)"
      References="@(ReferencePathWithRefAssemblies)"
      OutputsToCache="@(CompileOutputsToCache)"
      IntermediateOutputPath="$(IntermediateOutputPath)"
      CheckCompileOutputAgainstCache="$(CompileAndCheckAgainstCache)"
      CacheHit="$(CacheHit)"
      CacheKey="$(CacheKey)"
      LocalInputsHash="$(LocalInputsHash)"
      BaseCacheDir="$(CompilationCacheBaseDir)" />
    <!--END OF CACHING EXTENSION CODE-->
    <ItemGroup>
      <_CoreCompileResourceInputs
        Remove="@(_CoreCompileResourceInputs)" />
    </ItemGroup>
    <CallTarget
      Targets="$(TargetsTriggeredByCompilation)"
      Condition="'$(TargetsTriggeredByCompilation)' != ''" />
  </Target>
</Project>